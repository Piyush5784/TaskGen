datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  selectedOrg   String?
  organisations Organisations[]
  projects      Projects[]
  tasks         Tasks[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Organisations {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  email       String
  type        String
  phoneNo     Int
  countryName String
  team        Team[]
  size        String
  userId      String     @db.ObjectId
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects    Projects[]
}

model Team {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  role           Role
  email          String
  organisationId String        @db.ObjectId
  organisation   Organisations @relation(fields: [organisationId], references: [id], onDelete: Cascade)
}

enum Role {
  Admin
  Member
  Viewer
}

model Projects {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String?
  techStack         String[]
  LiveLink          String?
  RepoLink          String?
  selectedProjectId String?
  goals             String[]
  organisationId    String        @db.ObjectId
  organisation      Organisations @relation(fields: [organisationId], references: [id], onDelete: Cascade)
  userId            String        @db.ObjectId
  user              User          @relation(fields: [userId], references: [id])
  tasks             Tasks[]
}

model Tasks {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?
  typeOfUpdate TypeOfUpdate
  status       Status
  reviewer     String?
  projectId    String       @db.ObjectId
  project      Projects     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  userId       String       @db.ObjectId
  user         User         @relation(fields: [userId], references: [id])
}

enum TypeOfUpdate {
  Bug
  Development
  Enhancement
  Feature
  Design
}

enum Status {
  Done
  InProgress
  Closed
  Completed
}
